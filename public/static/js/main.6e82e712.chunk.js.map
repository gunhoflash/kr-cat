{"version":3,"sources":["components/Timer.tsx","sections/1/index.tsx","components/Comments.tsx","sections/4/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["birthday","dayjs","dayCounts","TitleText","text","useMemo","className","SubTitle","isTheDay","dayCount","anniversary","format","Timer","useState","now","setNow","requestAnimationFrameRef","useRef","reduce","prevDayCount","millisecond","add","diff","day","Math","floor","hour","minute","second","showRemainedDate","valueOf","current","requestAnimationFrame","useEffect","cancelAnimationFrame","slice","Section","BASE_URL","CommentComp","prop","comment","writer","regDate","content","CommentInput","onRefresh","setWriter","password","setPassword","setContent","onSubmit","e","preventDefault","window","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","htmlFor","id","name","onChange","target","value","type","Comments","comments","setComments","refreshComments","json","map","index","Fullpage","sections","scrollingSpeed","scrollOverflow","recordHistory","normalScrollElements","render","state","fullpageApi","Wrapper","section","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e82e712.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\n\nconst birthday = dayjs('1996-10-24');\nconst dayCounts = [\n  12500,\n  12345,\n  12000,\n  11500,\n  11111,\n  11000,\n  10500,\n  10001,\n  10000,\n  9999,\n  9876,\n  9500,\n];\n\nconst TitleText = ({text}: {text: string}) => useMemo(() => (\n  <p className=\"title m-0 leading-none\">{text}</p>\n), [text]);\n\nconst SubTitle = ({isTheDay, dayCount, anniversary}: {isTheDay: boolean; dayCount: number; anniversary: Dayjs}) => useMemo(() => (\n  <div className=\"subtitle pl-0.5\">\n    {isTheDay\n      ? `${dayCount}: ${anniversary.format('YYYY-MM-DD')}`\n      : `${dayCount}까지`}\n  </div>\n), [isTheDay, dayCount]);\n\nconst Timer = () => {\n  const [now, setNow] = useState(0);\n\n  const requestAnimationFrameRef = useRef<number>();\n\n  const dayCount = dayCounts.reduce((prevDayCount, dayCount) => {\n    const anniversary = birthday.add(dayCount - 1, 'day');\n    const millisecond = anniversary.diff(now);\n    if (millisecond > 0) return dayCount;\n    if (millisecond > - 18 * 60 * 60 * 1000) return dayCount;\n    return prevDayCount;\n  }, dayCounts[0]);\n\n  const anniversary = birthday.add(dayCount - 1, 'day');\n  const millisecond = anniversary.diff(now);\n  const isTheDay = millisecond <= 0;\n\n  const day    = isTheDay ? 0 : Math.floor(millisecond / 1000 / 60 / 60 / 24);\n  const hour   = isTheDay ? 0 : Math.floor(millisecond / 1000 / 60 / 60) % 24;\n  const minute = isTheDay ? 0 : Math.floor(millisecond / 1000 / 60) % 60;\n  const second = isTheDay ? 0 : Math.floor(millisecond / 1000) % 60;\n\n  function showRemainedDate() {\n    setNow(dayjs().valueOf());\n    requestAnimationFrameRef.current = requestAnimationFrame(showRemainedDate);\n  }\n\n  useEffect(() => {\n    requestAnimationFrameRef.current = requestAnimationFrame(showRemainedDate);\n    return () => cancelAnimationFrame(requestAnimationFrameRef.current as number);\n  }, []);\n\n  return (\n    <>\n      <SubTitle isTheDay={isTheDay} dayCount={dayCount} anniversary={anniversary} />\n      <div>\n        {isTheDay ? 'Congratulations!' : (\n          <>\n            {!!(day                            ) && <TitleText text={`${day}일`} />}\n            {!!(day || hour                    ) && <TitleText text={`${('0' + hour).slice(-2)}시간`} />}\n            {!!(day || hour || minute          ) && <TitleText text={`${('0' + minute).slice(-2)}분`} />}\n            {!!(day || hour || minute || second) && <TitleText text={`${('0' + second).slice(-2)}초`} />}\n            <TitleText text={('00' + millisecond).slice(-3)} />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Timer;\n","import Timer from '@components/Timer';\nimport './style.css';\n\nfunction Section() {\n  return (\n    <div\n      className=\"\n        flex\n        flex-col\n        justify-center\n        overflow-hidden\n        w-full\n        h-full\n        text-[200%]\n        italic\n        pl-[1rem]\n        sm:pl-[2.5rem]\n        md:pl-[5rem]\n        lg:pl-[9rem]\n        xl:pl-[17rem]\n      \"\n    >\n      <Timer />\n    </div>\n  );\n}\n\nexport default Section;\n","import React, { useState, useEffect } from \"react\";\nimport '../styles/comment/style.css'\n\nconst BASE_URL = \"https://kr-carrot-kotlin.herokuapp.com/api\";\n\ninterface Comment {\n    id: Number,\n    writer: String,\n    content: String,\n    regDate: String,\n}\n\ninterface CommentProp {\n    comment: Comment,\n}\n\nfunction Comments() {\n    \n    const [comments, setComments] = useState<Comment[]>()\n\n    useEffect(() => {\n        refreshComments();\n    }, [])\n\n    const refreshComments = () => {\n        window.fetch(`${BASE_URL}/comments`)\n        .then(response => response.json())\n        .then(json => {\n            setComments(json.content);\n        })\n    }\n\n    return (\n        <div className=\"root flex flex-col items-center font-comment\">\n            <h1 className=\"comment-title\">방명록</h1>\n            <CommentInput onRefresh={refreshComments} />\n            <div className=\"flex flex-col comment-frame\">\n                { comments?.map((value, index) => <CommentComp comment={value} />) }\n            </div>\n        </div>\n    )\n}\n\nfunction CommentComp(prop: CommentProp) {\n    const { comment } = prop;\n    return (\n        <div className=\"flex flex-col mb-4 comment-background\">\n            <div className=\"flex flex-row mb-2\">\n                <div className=\"mr-2 comment-writer\">{comment.writer}</div>\n                <div className=\"comment-date\">{comment.regDate}</div>\n            </div>\n            <div className=\"flex flex-row\">\n                <div className=\"comment-content\">{comment.content}</div>\n            </div>\n        </div>\n    )\n}\n\nfunction CommentInput({onRefresh}: {onRefresh: () => void}) {\n    \n    const [writer, setWriter] = useState<string>();\n    const [password, setPassword] = useState<string>();\n    const [content, setContent] = useState<string>();\n\n    const saveComment = (e: any) => {\n        e.preventDefault();\n\n        window.fetch(`${BASE_URL}/comments`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                writer: writer,\n                password: password,\n                content: content,\n            }),\n        }).then(response => {\n            setWriter(\"\");\n            setPassword(\"\");\n            setContent(\"\");\n            onRefresh();\n            if (response.status !== 201) console.log(\"save comment error\");\n        });\n    }\n\n    return (\n        <div className=\"comment-input justify-self-start\">\n            <form onSubmit={saveComment}>\n                <div className=\"flex flex-row mb-4\">\n                    <div className=\"mr-4\">\n                        <label className=\"mr-2\" htmlFor=\"writer\">작성자</label>\n                        <input id=\"writer\" name=\"writer\" onChange={(e) => setWriter(e.target.value)} value={writer} />\n                    </div>\n                    <div>\n                        <label className=\"mr-2\" htmlFor=\"password\">비밀번호</label>\n                        <input id=\"password\" name=\"password\" type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                    </div>\n                </div>\n                <textarea className=\"comment-text\" id=\"content\" name=\"content\" onChange={(e) => setContent(e.target.value)} value={content} />\n                <div className=\"flex flex-row justify-end\">\n                    <button type=\"submit\">등록</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Comments;","import './style.css';\nimport Comments from '../../components/Comments'\n\nfunction Section() {\n    return (\n      <div\n        className=\"\n          flex\n          flex-col\n          justify-center\n          w-full\n          min-h-full\n        \"\n      >\n        <Comments />\n      </div>\n    );\n  }\n  \nexport default Section;","import ReactFullpage from '@fullpage/react-fullpage';\nimport Section1 from './sections/1';\n// import Section2 from './sections/2';\n// import Section3 from './sections/3';\nimport Section4 from './sections/4';\n\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props\nconst pluginWrapper = () => {\n  // require('./statics/fullpage.scrollHorizontally.min');\n};\n\nfunction App() {\n  return (\n    <Fullpage />\n  );\n}\n\nconst Fullpage = () => {\n  const sections = [\n    <Section1 />,\n    // <Section2 />,\n    // <Section3 />,\n    <Section4 />,\n  ];\n\n  return (\n    <ReactFullpage\n      // pluginWrapper={pluginWrapper}\n\n      //fullpage options\n      scrollingSpeed={1000} /* Options here */\n      scrollOverflow={true}\n      recordHistory={false}\n      normalScrollElements=\".normal-scroll-element\"\n\n      render={({ state, fullpageApi }) => {\n        return (\n          <ReactFullpage.Wrapper>\n            {sections.map((section, i) => (\n              <div key={i} className=\"section\">\n                {section}\n              </div>\n            ))}\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './styles/dist/global.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}